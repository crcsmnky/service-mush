apiVersion: v1
kind: Service
metadata:
  name: weather-frontend
  labels:
    app: weather-frontend
spec:
  ports:
  - port: 5000
    name: http-frontend
  selector:
    app: weather-frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-frontend
  labels:
    app: weather-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: weather-frontend
  template:
    metadata:
      labels:
        app: weather-frontend
        version: v1
    spec:
      containers:
      - name: weather-frontend
        image: gcr.io/crcsmnky/weather-frontend:1.1
        imagePullPolicy: Always
        env:
        - name: BACKEND_HOSTPORT
          value: weather-backend:5000
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: weather-backend
  labels:
    app: weather-backend
spec:
  ports:
  - port: 5000
    name: http-backend
  selector:
    app: weather-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-backend-single
  labels:
    app: weather-backend
    version: single
spec:
  replicas: 1
  selector:
    matchLabels:
      app: weather-backend
  template:
    metadata:
      labels:
        app: weather-backend
        version: single
    spec:
      containers:
      - name: weather-backend
        image: gcr.io/crcsmnky/weather-backend-single:1.1
        imagePullPolicy: Always
        env:
        - name: OWM_API_KEY
          valueFrom:
            secretKeyRef:
              name: openweathermap
              key: apikey
        ports:
        - containerPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-backend-multiple
  labels:
    app: weather-backend
    version: multiple
spec:
  replicas: 1
  selector:
    matchLabels:
      app: weather-backend
  template:
    metadata:
      labels:
        app: weather-backend
        version: multiple
    spec:
      containers:
      - name: weather-backend
        image: gcr.io/crcsmnky/weather-backend-multiple:1.1
        imagePullPolicy: Always
        env:
        - name: OWM_API_KEY
          valueFrom:
            secretKeyRef:
              name: openweathermap
              key: apikey
        ports:
        - containerPort: 5000
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: gw-weather-frontend
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "default/*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: vs-weather-frontend
spec:
  hosts:
  - "*"
  gateways:
  - gw-weather-frontend
  http:
  - match:
    - uri:
        exact: /
    route:
    - destination:
        host: weather-frontend
        port:
          number: 5000
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: vs-weather-backend
spec:
  hosts:
    - weather-backend
  http:
  - route:
    # - destination:
    #     host: weather-backend
    #     subset: single
    #     port:
    #       number: 5000
    #   weight: 10
    - destination:
        host: weather-backend
        subset: multiple
        port:
          number: 5000
      # weight: 90
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: weather-backend
spec:
  host: weather-backend
  trafficPolicy:
    tls:
      mode: DISABLE
  subsets:
  - name: single
    labels:
      version: single
  - name: multiple
    labels:
      version: multiple
---
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: se-openweathermap
spec:
  hosts:
  - api.openweathermap.org
  ports:
  - number: 80
    name: http
    protocol: HTTP
  location: MESH_EXTERNAL
---
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: se-googleapis
spec:
  hosts:
  - "accounts.google.com"
  - "*.googleapis.com"
  ports:
  - number: 80
    name: http
    protocol: HTTP
  - number: 443
    name: https
    protocol: HTTPS
  location: MESH_EXTERNAL
---
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: se-metadata
spec:
  hosts:
  - metadata.google.internal
  addresses:
  - 169.254.169.254
  ports:
  - number: 80
    name: http
    protocol: HTTP
  - number: 443
    name: https
    protocol: HTTPS
  location: MESH_EXTERNAL